// toDo: 在 Xcode 中 程序配置里的 TARGETS 相关选项的设定，如是否允许旋转屏，系统控件的语言等
// toDo: App Icons 、 Launch Images ，程序图标和启动图的设定
// 程序入口描述文件 （ 模版设定、默认着色设定等 ） 
{
    // k > 全局颜色
    // v > 全局颜色 详细配置
    "Global_UIColor": {

        // k > 供全局文件使用的 颜色 key (唯一)
        // v > 装有 RGB 颜色数值的 数组
        "custom_barTintColor": [
            100,
            180,
            250
        ], 

        "custom_barActionItemColor": [
            68,
            156,
            182
        ],

        "custom_barTitleColor": [
            255,
            255,
            255
        ],

        "bg_color": [
            232,
            242,
            250
        ]

        // toDo : 提供几种常用颜色
    },



    // k > 在同一导航栏视图控制器中 以 push 形式弹出的下一级视图控制器中的 返回按钮 样式
    // v > 详细配置 
    "popBackButton": {

        // k > 类型 (original : 系统默认带文字的样式；image : 自定义返回按钮图片)
        // v > 着色详细配置 
        "mold": "image",

        "path": "Images/nav_back.png"
    }, 
    /**
     *    设置返回按钮 样式 写入代码的步骤
     *    1. original 则什么都不用做
     *    2. image 需把 path 路径的图片拷至项目中 images 文件夹，并在 AppDelegate.m 文件中 didFinishLaunchingWithOptions 回调方法代码块中 添加 37-41 行的代码 
     */


    // k > 模版设定
    // v > 模版详细配置
    "template": {

        // k > 模版 类型
        // v > 以 UINavigationController 为 appRootViewController
        "type": "UINavigationController", 

        // k > app 的 根视图控制器
        // v > 根视图控制器的 详细配置
        "rootViewController": {

            // k > UINavigationController 的 根视图控制器
            // v > 根视图控制器的 json 描述文件的 路径。
            "path": "json/Index.json"
            

        }
        

        
    } 
    /**
     *    以导航视图为模版 写入代码的步骤
     *    1. AppDelegate.h 如文件中内容
     *    2. 在 AppDelegate.m 顶部添加文件导入代码 #import "IndexJViewController.h" (用来引用 导航视图的根视图类)
     *    3. 在 AppDelegate.m 文件中 didFinishLaunchingWithOptions 回调方法代码块中 添加 22-53 行的代码
     */
    

}
